{"version":3,"sources":["/home/vasiliy/workdirs/2fa-cabinet-git/client/src/$_lazy_route_resource lazy","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.module.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-create/client-create.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-create/client-create.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-create/client-create.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-detail/client-detail.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-detail/client-detail.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-detail/client-detail.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-edit/client-edit.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-edit/client-edit.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-edit/client-edit.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client/client.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client/client.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client/client.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/clients-data/clients-data.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/clients-data/clients-data.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/clients-data/clients-data.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/dashboard.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/dashboard.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/dashboard.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/matPaginatorIntlRu.module.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/home/home.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/home/home.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/home/home.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/login/login.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/login/login.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/login/login.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/navbar/navbar.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/navbar/navbar.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/navbar/navbar.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/profile/profile.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/profile/profile.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/profile/profile.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/register/register.component.css","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/register/register.component.html","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/register/register.component.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/guards/auth.guard.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/material.module.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/services/auth.service.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/services/validate.service.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/environments/environment.ts","/home/vasiliy/workdirs/2fa-cabinet-git/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { ClientDetailComponent } from './components/client-detail/client-detail.component';\nimport { ClientCreateComponent } from './components/client-create/client-create.component';\nimport { ClientEditComponent } from './components/client-edit/client-edit.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MaterialModule } from 'app/material.module';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { MatPaginatorIntlRu } from 'app/components/dashboard/matPaginatorIntlRu.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClientsDataComponent } from './components/clients-data/clients-data.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\nconst appRoutes: Routes =  [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'clients', component: ClientComponent, data: { title: 'Список клиентов' }},\n  {path: 'client-details/:id', component: ClientDetailComponent, data: { title: 'Подробно о клиенте' }},\n  {path: 'client-create', component: ClientCreateComponent, data: { title: 'Создание клиента' }},\n  {path: 'client-edit/:id', component: ClientEditComponent, data: { title: 'Редактирование клиента' } },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    ClientComponent,\n    ClientDetailComponent,\n    ClientsDataComponent,\n    ClientCreateComponent,\n    ClientEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard, { provide: MatPaginatorIntl, useClass: MatPaginatorIntlRu}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".create-client-form  {\\n    box-shadow: 0 0 5px 0px black;\\n    padding: 50px;\\n    margin: 20px;\\n    height: 600px;\\n}\\n\\n.create-client-form mat-form-field,\\n.create-client-form mat-checkbox,\\n.create-client-form mat-list {\\n    width: 400px;\\n}\\n\\n@media (max-width: 750px) {\\n    .create-client-form mat-form-field,\\n    .create-client-form mat-checkbox,\\n    .create-client-form mat-list {\\n        width: 300px;\\n        font-size: .99em;\\n    }\\n    .create-client-form h1 {\\n        font-size: .99em;\\n    }\\n    .create-client-form mat-checkbox {\\n        font-size: .8em;\\n    }\\n}\\n\\n@media (max-width: 450px) {\\n    .create-client-form mat-form-field,\\n    .create-client-form mat-checkbox,\\n    .create-client-form mat-list {\\n        width: 200px;\\n        font-size: .95em;\\n    }\\n    .create-client-form h1 {\\n        font-size: .95em;\\n    }\\n    .create-client-form mat-checkbox {\\n        font-size: .7em;\\n    }\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-create/client-create.component.css\n// module id = ../../../../../src/app/components/client-create/client-create.component.css\n// module chunks = main","module.exports = \"<section class=\\\"create-client\\\">\\n  <div class=\\\"create-client-container\\\">\\n    <mat-card>\\n      <mat-card-title-group>\\n        <mat-card-title>Новый клиент 2FA</mat-card-title>\\n        <i class=\\\"material-icons\\\">assignment_ind</i>\\n      </mat-card-title-group>\\n      <mat-card-footer>\\n        <mat-progress-bar mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\n      </mat-card-footer>\\n    </mat-card>\\n    <section class=\\\"create-client-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" (ngSubmit)=\\\"saveClient()\\\" #clientForm=\\\"ngForm\\\">\\n        <mat-form-field hintLabel=\\\"Максимум 50 символов\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"ФИО клиента\\\" [(ngModel)]=\\\"client.name\\\" name=\\\"name\\\" required maxlength=\\\"50\\\" #nameInput=\\\"ngModel\\\">\\n          <mat-icon matSuffix>person</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{nameInput.value?.length || 0}}/50</mat-hint>\\n          <mat-error *ngIf=\\\"nameInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!nameInput.hasError('required')\\\">Неверно введено имя</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field hintLabel=\\\"Максимум 20 символов\\\">\\n          <input type=\\\"tel\\\" matInput placeholder=\\\"Номер телефона\\\" [(ngModel)]=\\\"client.phoneNumber\\\" maxlength=\\\"20\\\" name=\\\"phoneNumber\\\" required #phoneNumberInput=\\\"ngModel\\\">\\n          <mat-icon matSuffix>phone</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{phoneNumberInput.value?.length || 0}}/20</mat-hint>\\n          <mat-error *ngIf=\\\"phoneNumberInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!phoneNumberInput.hasError('required')\\\">Неверный формат номера</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field hintLabel=\\\"Максимум 12 цифр\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"ИИН\\\" [(ngModel)]=\\\"client.uin\\\" name=\\\"uin\\\" required #uinInput=\\\"ngModel\\\" oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\" maxlength=\\\"12\\\">\\n          <mat-icon matSuffix>contacts</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{uinInput.value?.length || 0}}/12</mat-hint>\\n          <mat-error *ngIf=\\\"uinInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!uinInput.hasError('required')\\\">Неверный формат номера</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field hintLabel=\\\"Максимум 50 символов\\\">\\n          <input type=\\\"email\\\" matInput placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"client.email\\\" name=\\\"email\\\" required maxlength=\\\"50\\\" #emailInput=\\\"ngModel\\\">\\n          <mat-icon matSuffix>email</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{emailInput.value?.length || 0}}/50</mat-hint>\\n          <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Неверный формат email</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select [(ngModel)]=\\\"client.sex\\\" name=\\\"sex\\\" required placeholder=\\\"Пол\\\" required>\\n            <mat-option *ngFor=\\\"let s of sex\\\" [value]=\\\"s\\\">{{s}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-icon matSuffix>wc</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Дата рождения\\\" [(ngModel)]=\\\"client.birthDate\\\" name=\\\"birthDate\\\" required>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n        <div>\\n          <button mat-raised-button  [routerLink]=\\\"['/dashboard']\\\">Отмена</button>\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!clientForm.form.valid\\\">Создать</button>\\n        </div>\\n      </form>\\n    </section>\\n  </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-create/client-create.component.html\n// module id = ../../../../../src/app/components/client-create/client-create.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-client-create',\n  templateUrl: './client-create.component.html',\n  styleUrls: ['./client-create.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ClientCreateComponent implements OnInit {\n\n  client = {};\n  sex: string[] = ['Мужской', 'Женский'];\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  saveClient() {\n    this.http.post('http://127.0.0.1:3002/clients', this.client)\n      .subscribe(res => {\n          const id = res['_id'];\n          this.router.navigate(['/client-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-create/client-create.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-all-clients {\\n    margin-left: 30px;\\n}\\n\\n.detail-client-container {\\n    box-shadow: 0 0 5px 0px black;\\n    padding: 50px;\\n    margin: 20px;\\n    height: 700px;\\n    width: 600px;\\n}   \\n\\n.detail-client-container mat-card {\\n    width: 550px;\\n}\\n\\n.detail-client-container mat-card-subtitle{\\n    padding: 5px;\\n}\\n\\n.detail-client-container .material-icons i.icon-head{\\n    font-size: 1.99em;\\n}\\n.detail-client-container .material-icons{\\n    font-size: 1.99em;\\n}\\n\\n\\n\\n\\n@media (max-width: 750px) {\\n    .detail-client-container mat-card, {\\n        width: 300px;\\n        font-size: .99em;\\n    }\\n    .detail-client-container h1 {\\n        font-size: .99em;\\n    }\\n    .detail-client-container mat-checkbox {\\n        font-size: .8em;\\n    }\\n}\\n\\n@media (max-width: 450px) {\\n    .detail-client-container mat-card, {\\n        width: 200px;\\n        font-size: .95em;\\n    }\\n    .detail-client-container h1 {\\n        font-size: .95em;\\n    }\\n    .detail-client-container mat-checkbox {\\n        font-size: .7em;\\n    }\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-detail/client-detail.component.css\n// module id = ../../../../../src/app/components/client-detail/client-detail.component.css\n// module chunks = main","module.exports = \"<section class=\\\"detail-client\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div class=\\\"detail-client-container\\\">\\n    <mat-card>\\n      <mat-card-title-group fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <mat-card-title>Подробные сведения о клиенте</mat-card-title>\\n        <button mat-raised-button class=\\\"btn-all-clients\\\" color=\\\"primary\\\" [routerLink]=\\\"['/dashboard']\\\">\\n          <mat-icon aria-label=\\\"Все клиенты\\\">assignment_ind</mat-icon>\\n          {{ '  Все клиенты' | uppercase }}</button>\\n        <!-- <i class=\\\"material-icons icon-head\\\">assignment_ind</i> -->\\n      </mat-card-title-group>\\n      <mat-card-footer>\\n        <mat-progress-bar mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\n      </mat-card-footer>\\n    </mat-card>\\n    <div>\\n      <mat-card>\\n        <mat-card-title-group>\\n          <mat-divider></mat-divider>\\n          <mat-card-subtitle>ФИО</mat-card-subtitle>\\n          <mat-card-title>{{ client.Name }}</mat-card-title>\\n          <i class=\\\"material-icons\\\">perm_identity</i>\\n        </mat-card-title-group>\\n        <mat-divider></mat-divider>\\n        <mat-card-title-group>\\n          <mat-card-subtitle>НОМЕР ТЕЛЕФОНА</mat-card-subtitle>\\n          <mat-card-title>{{ client.PhoneNumber }}</mat-card-title>\\n          <i class=\\\"material-icons\\\">phone</i>\\n        </mat-card-title-group>\\n        <mat-divider></mat-divider>\\n        <mat-card-title-group>\\n          <mat-card-subtitle>ИИН</mat-card-subtitle>\\n          <mat-card-title>{{ client.Uin }}</mat-card-title>\\n          <i class=\\\"material-icons\\\">recent_actors</i>\\n        </mat-card-title-group>\\n        <mat-divider></mat-divider>\\n        <mat-card-title-group>\\n          <mat-card-subtitle>EMAIL</mat-card-subtitle>\\n          <mat-card-title>{{ client.Email }}</mat-card-title>\\n          <i class=\\\"material-icons\\\">email</i>\\n        </mat-card-title-group>\\n        <mat-divider></mat-divider>\\n        <mat-card-title-group>\\n          <mat-card-subtitle>ПОЛ</mat-card-subtitle>\\n          <mat-card-title>{{ client.Sex }}</mat-card-title>\\n          <i class=\\\"material-icons\\\">wc</i>\\n        </mat-card-title-group>\\n        <mat-divider></mat-divider>\\n        <mat-card-title-group>\\n          <mat-card-subtitle>ДАТА РОЖДЕНИЯ</mat-card-subtitle>\\n          <mat-card-title>{{ client.Birthdate | date: 'd.MM.yyyy' }}</mat-card-title>\\n          <i class=\\\"material-icons\\\">date_range</i>\\n        </mat-card-title-group>\\n        <mat-card-title-group>\\n          <mat-card-subtitle>ПОДТВЕРЖДЕН В СИСТЕМЕ</mat-card-subtitle>\\n          <mat-card-title *ngIf=\\\"client.IsVerified;else notVerified\\\">Да</mat-card-title>\\n          <ng-template #notVerified>\\n            <mat-card-title>Нет</mat-card-title>\\n          </ng-template>\\n          <i class=\\\"material-icons\\\">verified_user</i>\\n        </mat-card-title-group>\\n        <mat-card-footer>\\n          <mat-progress-bar mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\n          <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/client-edit', client._id]\\\">{{ 'Редактировать' | uppercase }}</button>\\n            <!-- <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteClient(client._id)\\\">{{ 'Удалить' | uppercase }}</button> -->\\n          </mat-card-actions>\\n        </mat-card-footer>\\n      </mat-card>\\n    </div>\\n  </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-detail/client-detail.component.html\n// module id = ../../../../../src/app/components/client-detail/client-detail.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-client-detail',\n  templateUrl: './client-detail.component.html',\n  styleUrls: ['./client-detail.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ClientDetailComponent implements OnInit {\n\n  client = {};\n  constructor(private router: Router, private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getClientDetail(this.route.snapshot.params['id']);\n  }\n\n\n\n  getClientDetail(id) {\n    this.http.get('http://127.0.0.1:3002/clients/' + id).subscribe(data => {\n      this.client = data;\n    });\n  }\n\n  deleteClient(id) {\n    this.http.delete('http://127.0.0.1:3002/clients/' + id)\n      .subscribe(res => {\n          this.router.navigate(['/clients']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-detail/client-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".edit-client-form {\\n    box-shadow: 0 0 5px 0px black;\\n    padding: 50px;\\n    margin: 20px;\\n    height: 600px;\\n}\\n\\n.edit-client-form mat-form-field,\\n.edit-client-form mat-checkbox,\\n.edit-client-form mat-list {\\n    width: 400px;\\n}\\n\\n@media (max-width: 750px) {\\n    .edit-client-form mat-form-field,\\n    .edit-client-form mat-checkbox,\\n    .edit-client-form mat-list {\\n        width: 300px;\\n        font-size: .99em;\\n    }\\n    .edit-client-form h1 {\\n        font-size: .99em;\\n    }\\n    .edit-client-form mat-checkbox {\\n        font-size: .8em;\\n    }\\n}\\n\\n@media (max-width: 450px) {\\n    .edit-client-form mat-form-field,\\n    .edit-client-form mat-checkbox,\\n    .edit-client-form mat-list {\\n        width: 200px;\\n        font-size: .95em;\\n    }\\n    .edit-client-form h1 {\\n        font-size: .95em;\\n    }\\n    .edit-client-form mat-checkbox {\\n        font-size: .7em;\\n    }\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-edit/client-edit.component.css\n// module id = ../../../../../src/app/components/client-edit/client-edit.component.css\n// module chunks = main","module.exports = \"<section class=\\\"edit-client\\\">\\n  <div class=\\\"edit-client-container\\\">\\n    <mat-card>\\n      <mat-card-title-group>\\n        <mat-card-title>Редактирование клиента 2FA</mat-card-title>\\n        <i class=\\\"material-icons\\\">assignment_ind</i>\\n      </mat-card-title-group>\\n      <mat-card-footer>\\n        <mat-progress-bar mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\n      </mat-card-footer>\\n    </mat-card>\\n    <section class=\\\"edit-client-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" (ngSubmit)=\\\"updateClient(client._id)\\\" #clientForm=\\\"ngForm\\\">\\n        <mat-form-field hintLabel=\\\"Максимум 50 символов\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"ФИО клиента\\\" [(ngModel)]=\\\"client.name\\\" name=\\\"name\\\" required maxlength=\\\"50\\\" #nameInput=\\\"ngModel\\\">\\n          <mat-icon matSuffix>person</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{nameInput.value?.length || 0}}/50</mat-hint>\\n          <mat-error *ngIf=\\\"nameInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!nameInput.hasError('required')\\\">Неверно введено имя</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field hintLabel=\\\"Максимум 20 символов\\\">\\n          <input type=\\\"tel\\\" matInput placeholder=\\\"Номер телефона\\\" [(ngModel)]=\\\"client.phoneNumber\\\" name=\\\"phoneNumber\\\" required #phoneNumberInput=\\\"ngModel\\\">\\n          <mat-icon matSuffix>phone</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{phoneNumberInput.value?.length || 0}}/20</mat-hint>\\n          <mat-error *ngIf=\\\"phoneNumberInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!phoneNumberInput.hasError('required')\\\">Неверный формат номера</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field hintLabel=\\\"Максимум 12 цифр\\\">\\n          <input type=\\\"text\\\" matInput placeholder=\\\"ИИН\\\" [(ngModel)]=\\\"client.uin\\\" name=\\\"uin\\\" required maxlength=\\\"12\\\" #uinInput=\\\"ngModel\\\" oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n          <mat-icon matSuffix>contacts</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{uinInput.value?.length || 0}}/12</mat-hint>\\n          <mat-error *ngIf=\\\"uinInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!uinInput.hasError('required')\\\">Неверный формат номера</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field hintLabel=\\\"Максимум 50 символов\\\">\\n          <input type=\\\"email\\\" matInput placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"client.email\\\" name=\\\"email\\\" required maxlength=\\\"50\\\" #emailInput=\\\"ngModel\\\">\\n          <mat-icon matSuffix>email</mat-icon>\\n          <mat-hint align=\\\"end\\\">{{emailInput.value?.length || 0}}/50</mat-hint>\\n          <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n          <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Неверный формат email</mat-error>\\n          <mat-error></mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select [(ngModel)]=\\\"client.sex\\\" name=\\\"sex\\\" required placeholder=\\\"Пол\\\" required>\\n            <mat-option *ngFor=\\\"let s of sex\\\" [value]=\\\"s\\\">{{s}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-icon matSuffix>wc</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Дата рождения\\\" [(ngModel)]=\\\"client.birthDate\\\" name=\\\"birthDate\\\" required>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!clientForm.form.valid\\\">ОБНОВИТЬ</button>\\n      </form>\\n    </section>\\n  </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-edit/client-edit.component.html\n// module id = ../../../../../src/app/components/client-edit/client-edit.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-client-edit',\n  templateUrl: './client-edit.component.html',\n  styleUrls: ['./client-edit.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ClientEditComponent implements OnInit {\n\n  client: any = {};\n  sex: string[] = ['Мужской', 'Женский'];\n  hide = true;\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getClient(this.route.snapshot.params['id']);\n  }\n\n  getClient(id) {\n    this.http.get('http://127.0.0.1:3002/clients/' + id).subscribe(data => {\n      this.client = data;\n    });\n  }\n\n  updateClient(id) {\n    this.client.updated_date = Date.now();\n    this.http.put('http://127.0.0.1:3002/clients/' + id, this.client)\n      .subscribe(res => {\n        let id = res['_id'];\n        this.router.navigate(['/client-details', id]);\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client-edit/client-edit.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client/client.component.css\n// module id = ../../../../../src/app/components/client/client.component.css\n// module chunks = main","module.exports = \"<div >\\n  <h1>СПИСОК КЛИЕНТОВ </h1>\\n  <a [routerLink]=\\\"['/client-create']\\\" class=\\\"btn btn-default btn-lg align-middle\\\">\\n    <i class=\\\"material-icons align-middle\\\">note_add</i>\\n    <span>НОВЫЙ КЛИЕНТ</span>\\n  </a>\\n  <table class=\\\"table table-hover\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">НОМЕР ТЕЛЕФОНА</th>\\n        <th scope=\\\"col\\\">ИИН</th>\\n        <th scope=\\\"col\\\">ФИО</th>\\n        <th scope=\\\"col\\\">ПОДТВЕРЖДЕН</th>\\n        <th scope=\\\"col\\\">EMAIL</th>\\n        <th scope=\\\"col\\\">ПОЛ</th>\\n        <th scope=\\\"col\\\">ДАТА РОЖДЕНИЯ</th>\\n        <th scope=\\\"col\\\">ДЕЙСТВИЯ</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let client of clients\\\">\\n        <td>{{ client.phoneNumber }}</td>\\n        <td>{{ client.uin }}</td>\\n        <td>{{ client.name }}</td>\\n        <td>{{ client.isVerified }}</td>\\n        <td>{{ client.email }}</td>\\n        <td>{{ client.sex }}</td>\\n        <td>{{ client.birthDate | date: 'd.MM.yyyy' }}</td>\\n        <td>\\n          <a [routerLink]=\\\"['/client-details', client._id]\\\" ><i class=\\\"material-icons\\\" placeholder=\\\"ПРОСМОТР\\\">pageview</i></a>\\n          <a [routerLink]=\\\"['/client-edit', client._id]\\\" ><i class=\\\"material-icons\\\" placeholder=\\\"РЕДАКТИРОВАТЬ\\\">mode_edit</i></a>\\n          <a (click)=\\\"deleteClient(client._id)\\\" ><i class=\\\"material-icons\\\" placeholder=\\\"УДАЛИТЬ\\\">delete_forever</i></a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table> \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client/client.component.html\n// module id = ../../../../../src/app/components/client/client.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ClientComponent implements OnInit {\n\n  clients: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('http://127.0.0.1:3002/clients').subscribe(data => {\n      console.log(data);\n      this.clients = data;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/client/client.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/clients-data/clients-data.component.css\n// module id = ../../../../../src/app/components/clients-data/clients-data.component.css\n// module chunks = main","module.exports = \"<p>\\n  clients-data works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/clients-data/clients-data.component.html\n// module id = ../../../../../src/app/components/clients-data/clients-data.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clients-data',\n  templateUrl: './clients-data.component.html',\n  styleUrls: ['./clients-data.component.css']\n})\nexport class ClientsDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/clients-data/clients-data.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Structure */\\n.example-container {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n    min-width: 300px;\\n  }\\n  \\n  .example-header {\\n    min-height: 64px;\\n    padding: 8px 24px 0;\\n  }\\n  \\n  .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n  }\\n  \\n  .mat-table {\\n    overflow: auto;\\n    max-height: 600px;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<section class=\\\"home-guest\\\">\\n  <div class=\\\"home-container\\\">\\n    <mat-card>\\n      <mat-card-title-group>\\n        <mat-card-title>ПАНЕЛЬ УПРАВЛЕНИЯ 2FA</mat-card-title>\\n        <mat-card-subtitle>Система управления клиентами сервиса двухфакторной аутентификации</mat-card-subtitle>\\n        <i class=\\\"material-icons\\\">settings</i>\\n      </mat-card-title-group>\\n      <mat-card-footer>\\n        <mat-progress-bar mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\n      </mat-card-footer>\\n    </mat-card>\\n    <mat-tab-group>\\n      <mat-tab label=\\\"ВСЕ КЛИЕНТЫ\\\">\\n          <button mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/client-create']\\\">\\n            <mat-icon aria-label=\\\"Создание нового клиента\\\">assignment_ind</mat-icon>\\n            Новый клиент\\n          </button>\\n        <div class=\\\"example-header\\\">\\n          <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Поиск клиента\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n          <!-- phoneNumber Column -->\\n          <ng-container matColumnDef=\\\"phoneNumber\\\">\\n            <mat-header-cell *matHeaderCellDef> Номер телефона </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.PhoneNumber}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- uin Column -->\\n          <ng-container matColumnDef=\\\"uin\\\">\\n            <mat-header-cell *matHeaderCellDef> ИИН </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.Uin}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef> ФИО </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.Name}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- isVerified Column -->\\n          <ng-container matColumnDef=\\\"isVerified\\\">\\n            <mat-header-cell *matHeaderCellDef> Подтвержден </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.IsVerified}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- email Column -->\\n          <ng-container matColumnDef=\\\"email\\\">\\n            <mat-header-cell *matHeaderCellDef> Почтовый адрес </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.Email}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- sex Column -->\\n          <ng-container matColumnDef=\\\"sex\\\">\\n            <mat-header-cell *matHeaderCellDef> Пол </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.Sex}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- birthDate Column -->\\n          <ng-container matColumnDef=\\\"birthDate\\\">\\n            <mat-header-cell *matHeaderCellDef> Дата рождения </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.user.Birthdate | date: 'd.MM.yyyy'}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- actions Column -->\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef> Действия </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n              <button mat-icon-button color=\\\"primary\\\" [routerLink]=\\\"['/client-details', element.address]\\\">\\n                <mat-icon aria-label=\\\"Просмотр карточки клиента\\\">pageview</mat-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"accent\\\" [routerLink]=\\\"['/client-edit', element.address]\\\">\\n                <mat-icon aria-label=\\\"Редактирование клиента\\\">mode_edit</mat-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteClient(element.address)\\\">\\n                <mat-icon aria-label=\\\"Удаление клиента\\\">delete</mat-icon>\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\" [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n      </mat-tab>\\n      <mat-tab label=\\\"ИНФОРМАЦИЯ\\\">\\n        \\n      </mat-tab>\\n      <mat-tab label=\\\"ПРОФИЛЬ АДМИНИСТРАТОРА\\\">\\n        \\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { ClientDetailComponent } from '../client-detail/client-detail.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n  clients: any;\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute, ) { }\n\n  // ngOnInit() {\n  // }\n  displayedColumns = ['phoneNumber', 'uin', 'name', 'isVerified', 'email', 'sex', 'birthDate', 'actions'];\n  dataSource = new MatTableDataSource<Element>(this.clients);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   * Set the paginator after the view init since this component will\n   * be able to query its view for the initialized paginator.\n   */\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  ngOnInit() {\n    this.http.get('http://127.0.0.1:3002/clients').subscribe(data => {\n      console.log(data);\n      this.clients = data;\n      this.dataSource = new MatTableDataSource<Element>(this.clients);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  deleteClient(id) {\n    this.http.delete('http://127.0.0.1:3002/clients/' + id)\n      .subscribe(res => {\n        // this.router.navigate(['/clients']);\n        this.ngOnInit();\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n}\n\nexport interface Element {\n  phoneNumber: string;\n  uin: number;\n  name: string;\n  isVerified: boolean;\n  email: string;\n  sex: string;\n  birthDate: string;\n}\n// const ELEMENT_DATA: Element[] = this.clients;\n// const ELEMENT_DATA: Element[] = [\n//   {\n//     phoneNumber: '+770544521452',\n//     uin: 820145211452145,\n//     name: 'Велимир Фомин',\n//     isVerified: true,\n//     email: 'hilanennam-9669@yopmail.com',\n//     sex: 'Мужской',\n//     birthDate: '2012-04-23T18:25:43.511Z',\n//     // actions: {\n//     //   view: () => {\n//     //     this.clientDetail.getClientDetail(this.route.snapshot.params['id']);\n//     //   },\n//     // }\n  // },\n  // {\n  //   \"phoneNumber\": \"+770544521452\",\n  //   \"uin\": \"820145211452145\",\n  //   \"name\": \"Велимир Фомин\",\n  //   \"isVerified\": \"true\",\n  //   \"email\": \"hilanennam-9669@yopmail.com\",\n  //   \"sex\": \"Мужской\",\n  //   \"birthDate\": \"2012-04-23T18:25:43.511Z\"\n  // },\n  // {\n  //   \"phoneNumber\": \"+770544521452\",\n  //   \"uin\": \"820145211452145\",\n  //   \"name\": \"Владлен Тимофеев\",\n  //   \"isVerified\": \"true\",\n  //   \"email\": \"yrepucerre-1834@yopmail.com\",\n  //   \"sex\": \"Мужской\",\n  //   \"birthDate\": \"2012-04-23T18:25:43.511Z\"\n  // },\n  // {\n  //   \"phoneNumber\": \"+770544521452\",\n  //   \"uin\": \"820145211452145\",\n  //   \"name\": \"Трофим Зюганов\",\n  //   \"isVerified\": \"true\",\n  //   \"email\": \"xyqicera-8296@yopmail.com\",\n  //   \"sex\": \"Мужской\",\n  //   \"birthDate\": \"2012-04-23T18:25:43.511Z\"\n  // },\n  // {\n  //   \"phoneNumber\": \"+770544521452\",\n  //   \"uin\": \"820145211452145\",\n  //   \"name\": \"Александр Гуляев\",\n  //   \"isVerified\": \"true\",\n  //   \"email\": \"acaffuce-0074@yopmail.com\",\n  //   \"sex\": \"Мужской\",\n  //   \"birthDate\": \"2012-04-23T18:25:43.511Z\"\n  // },\n  // {\n  //   \"phoneNumber\": \"+770544521452\",\n  //   \"uin\": \"820145211452145\",\n  //   \"name\": \"Альфред Алексеев\",\n  //   \"isVerified\": \"true\",\n  //   \"email\": \"worrofynny-2280@yopmail.com\",\n  //   \"sex\": \"Мужской\",\n  //   \"birthDate\": \"2012-04-23T18:25:43.511Z\"\n  // },\n  // {\n  //   \"phoneNumber\": \"+770544521452\",\n  //   \"uin\": \"820145211452145\",\n  //   \"name\": \"Динар Селиверстов\",\n  //   \"isVerified\": \"true\",\n  //   \"email\": \"koganicame-4391@yopmail.com\",\n  //   \"sex\": \"Мужской\",\n  //   \"birthDate\": \"2012-04-23T18:25:43.511Z\"\n  // }\n\n// ];\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/dashboard.component.ts","import { MatPaginatorIntl } from '@angular/material';\n\nexport class MatPaginatorIntlRu extends MatPaginatorIntl {\n  lastPageLabel = 'Последняя страница';\n  firstPageLabel= 'Первая страница';\n  itemsPerPageLabel = 'Количество записей на странице';\n  nextPageLabel = 'Следующая страница';\n  previousPageLabel = 'Предыдущая страница';\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n    return `${startIndex + 1} - ${endIndex} из ${length}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/dashboard/matPaginatorIntlRu.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".home-container {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-flow: column nowrap;\\n        flex-flow: column nowrap;  \\n    \\n  }\\n\\n  .mat-card {\\n    margin: 0 16px 16px 0;\\n    width: 800px;\\n  }\\n\\n  .material-icons{\\n      font-size: 5em;\\n  }\\n  \\n  .demo-card-blue {\\n    background-color: #b0becc;  \\n    \\n  }\\n\\n  .mat-card-actions {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n  }\\n\\n  p {\\n      font-size: 16px;\\n      padding: 5px;\\n      text-align: justify;\\n  }\\n  a {\\n    display: block;\\n  }\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"\\n<section *ngIf=\\\"authService.loggedIn()\\\" class=\\\"home-admin\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div class=\\\"home-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n        <mat-card>\\n          Добро пожаловать, Администратор!\\n        </mat-card>\\n        <mat-card>\\n          <mat-card-title-group>\\n            <mat-card-title>Кабинет администратора 2FA</mat-card-title>\\n            <mat-card-subtitle>Система управления клиентами сервиса двухфакторной аутентификации</mat-card-subtitle>\\n            <i class=\\\"material-icons\\\">recent_actors</i>\\n          </mat-card-title-group>\\n        </mat-card>        \\n        <mat-card>\\n          <mat-card-subtitle>Описание сервиса</mat-card-subtitle>\\n          <mat-card-title>Сервис двухфакторной аутентификации 2FA</mat-card-title>\\n          <mat-card-content>\\n            <h2>Что такое двухфакторная аутентификация</h2>\\n            <p>Двухфакторная аутентификация – это система идентификации пользователя с использованием двух разных способов. Цель\\n              такого метода аутентификации – сделать защиту аккаунта пользователя более эффективной и надежной.</p>\\n            <h2>Как работает двухфакторная аутентификация</h2>\\n            <p>Самый простой и распространенный вариант – это использование для авторизации логина и пароля (на первом шаге) и одноразового\\n              пароля из СМС (на втором шаге). Помимо СМС возможны такие варианты:</p>\\n              <p>- Push-уведомление</p>\\n              <p>- Telegram-уведомление</p>\\n              <p>- Токен</p>\\n            <p>Несмотря на многообразие дополнительных способов подтверждения личности пользователя, суть метода проста – убедиться\\n              в том, что именно пользователь пытается войти в свой аккаунт, а не злоумышленник. Для злоумышленника наличие дополнительного\\n              фактора аутентификации чаще всего становится непреодолимой преградой, ведь одно дело – взломать, подобрать или\\n              похитить пароль, совершенно другое – завладеть мобильным телефоном реального пользователя.</p>\\n            <p>\\n              Стоит отметить, что двухфакторная аутентификация не является 100% надежным способом защиты: злоумышленники научились не только\\n              компрометировать Ваши обычные логины и пароли, но и выманивать одноразовые коды. Тем не менее затраты и сложность\\n              «работы» злоумышленника многократно возрастают. Именно поэтому сервис двухфакторной аутентификации является, пожалуй,\\n              самым надежным методом не только защиты, но и предупреждения пользователя об опасности взлома аккаунта (если Вам\\n              пришло СМС с одноразовым паролем, но Вы ее не запрашивали, то самое время менять старый пароль аккаунта на новый).\\n            </p>\\n          </mat-card-content>\\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n          <mat-card-actions>\\n              <button mat-button>\\n                <a target=\\\"_blank\\\" href=\\\"https://goo.gl/mLAiaB\\\" style=\\\"cursor: pointer;text-decoration: none;\\\">ПОДРОБНО</a>\\n              </button>        \\n          </mat-card-actions>\\n        </mat-card>\\n    \\n        <mat-card>\\n          <mat-card-subtitle>Используемая технология блокчейн</mat-card-subtitle>\\n          <img mat-card-image src=\\\"https://www.hyperledger.org/wp-content/uploads/2018/01/Hyperledger_Sawtooth_Logo_Color.png\\\">\\n          <mat-card-title>Hyperledger Sawtooth </mat-card-title>\\n          <mat-card-content>\\n            <mat-divider></mat-divider>\\n            <p>Hyperledger Sawtooth предоставляет инструменты для создания собственных реализаций блокчейнов, которые могут применяться\\n              для создания распределённых верифицированных баз данных, состоящих из взаимосвязанных транзакций, заверенных последующими\\n              транзакциями и исключающих изменение информации задним числом. Поступающие данные добавляются в виде обновлений\\n              на основе транзакций, которые применяются к распределённой между несколькими участниками БД. Участник может быть\\n              не связан цепочкой доверия, а достоверность БД координируется алгоритмами достижения консенсуса (для компрометации\\n              базы нужно одновременно получить контроль за состоянием на стороне большего числа участника).</p>\\n            <mat-divider></mat-divider>\\n            <p>Механизм консенсуса: Proof of Elapsed Time</p>\\n            <mat-divider></mat-divider>\\n            <p>Платформа не привязана к конкретной области и может применяться для финансового учёта, ведения кредитной истории,\\n              создания реестров ресурсов, инвентаризации, медицинских картотек и журналов различных бизнес-процессов. В разработке\\n              платформы приняли участие более 50 компаний, включая Amazon Web Services, Huawei, IBM, Intel, Microsoft Azure,\\n              Ericsson, T-Mobile и Wind River. Внедрено несколько экспериментальных прототипов систем учёта на базе Hyperledger\\n              Sawtooth, обеспечивающих фиксацию авторских прав на музыкальные и мультимедийные произведения, ведение медицинских\\n              карт и поддержание системы идентификации клиентов финансовых организаций (KYC).</p>\\n            <mat-divider></mat-divider>\\n            <mat-list>\\n              <mat-list-item>\\n                Особенности Hyperledger Sawtooth:\\n              </mat-list-item>\\n              <mat-divider></mat-divider>\\n              <mat-list-item>\\n                Применение смарт-контрактов для автоматизации бизнес-процессов и голосования по изменению конфигурации блокчейна (например,\\n                для добавления новых участников и смарт-контрактов)\\n              </mat-list-item>\\n    \\n              <mat-list-item>\\n                Расширенный движок выполнения транзакций, обеспечивающий параллельную обработку транзакций для ускорения формирования блоков\\n                и их проверки\\n              </mat-list-item>\\n              <mat-list-item>\\n                Поддержка интеграции с инструментарием платформы Ethereum и возможность запуска сторонних смарт-контрактов\\n              </mat-list-item>\\n              <mat-list-item>\\n                Возможность обновления или замены протокола достижения консенсуса по мере роста распределённой сети. Например, можно перейти\\n                на более масштабируемые алгоритмы расчёта консенсуса при их появлении\\n              </mat-list-item>\\n              <mat-list-item>\\n                Возможность разработки смарт-контрактов на различных языках программирования, в том числе на Go, JavaScript и Python\\n              </mat-list-item>\\n            </mat-list>\\n          </mat-card-content>\\n          <mat-card-actions align=\\\"end\\\">\\n            <button mat-button>\\n              <a target=\\\"_blank\\\" href=\\\"https://www.linuxfoundation.org/press-release/hyperledger-releases-hyperledger-sawtooth-1-0/\\\" style=\\\"cursor: pointer;text-decoration: none;\\\">ПОДРОБНО О HYPERLEDGER SAWTOOTH</a>\\n            </button>\\n          </mat-card-actions>\\n        </mat-card>\\n      </div>\\n</section>\\n<section *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"home-guest\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div class=\\\"home-container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-card>\\n      Добро пожаловать, Гость!\\n    </mat-card>\\n    <mat-card>\\n      <mat-card-title-group>\\n        <mat-card-title>Кабинет администратора 2FA</mat-card-title>\\n        <mat-card-subtitle>Система управления клиентами сервиса двухфакторной аутентификации</mat-card-subtitle>\\n        <i class=\\\"material-icons\\\">recent_actors</i>\\n      </mat-card-title-group>\\n    </mat-card>\\n    <mat-card>\\n      <mat-card-subtitle>Зарегистрируйтесь, если Вас нет в системе</mat-card-subtitle>\\n      <mat-card-title>Авторизуйтесь и получите возможность управлять клиентами 2FA</mat-card-title>\\n      <mat-card-content>\\n        <p>Интерфейс управления пользователями является гибким инструментом настройки учетных записей клиентов сервиса 2FA,\\n          позволяющим администраторам добавлять «внешних» пользователей (ручная регистрация) в сервис 2FA, удалять учетные\\n          записи, редактировать учетную информацию (адрес электронной почты, имя пользователя и т.д.) уже зарегистрированных\\n          пользователей.\\n        </p>\\n      </mat-card-content>\\n      <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n        <button mat-raised-button [routerLink]=\\\"['/register']\\\">{{ 'Зарегистрироваться' | uppercase }}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/login']\\\">{{ 'Войти' | uppercase }}</button>\\n      </mat-card-actions>\\n      <mat-card-footer>\\n        <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n      </mat-card-footer>\\n    </mat-card>\\n\\n    <mat-card>\\n      <mat-card-subtitle>Описание сервиса</mat-card-subtitle>\\n      <mat-card-title>Сервис двухфакторной аутентификации 2FA</mat-card-title>\\n      <mat-card-content>\\n        <h2>Что такое двухфакторная аутентификация</h2>\\n        <p>Двухфакторная аутентификация – это система идентификации пользователя с использованием двух разных способов. Цель\\n          такого метода аутентификации – сделать защиту аккаунта пользователя более эффективной и надежной.</p>\\n        <h2>Как работает двухфакторная аутентификация</h2>\\n        <p>Самый простой и распространенный вариант – это использование для авторизации логина и пароля (на первом шаге) и одноразового\\n          пароля из СМС (на втором шаге). Помимо СМС возможны такие варианты:</p>\\n          <p>- Push-уведомление</p>\\n          <p>- Telegram-уведомление</p>\\n          <p>- Токен</p>\\n        <p>Несмотря на многообразие дополнительных способов подтверждения личности пользователя, суть метода проста – убедиться\\n          в том, что именно пользователь пытается войти в свой аккаунт, а не злоумышленник. Для злоумышленника наличие дополнительного\\n          фактора аутентификации чаще всего становится непреодолимой преградой, ведь одно дело – взломать, подобрать или\\n          похитить пароль, совершенно другое – завладеть мобильным телефоном реального пользователя.</p>\\n        <p>\\n          Стоит отметить, что двухфакторная аутентификация не является 100% надежным способом защиты: злоумышленники научились не только\\n          компрометировать Ваши обычные логины и пароли, но и выманивать одноразовые коды. Тем не менее затраты и сложность\\n          «работы» злоумышленника многократно возрастают. Именно поэтому сервис двухфакторной аутентификации является, пожалуй,\\n          самым надежным методом не только защиты, но и предупреждения пользователя об опасности взлома аккаунта (если Вам\\n          пришло СМС с одноразовым паролем, но Вы ее не запрашивали, то самое время менять старый пароль аккаунта на новый).\\n        </p>\\n      </mat-card-content>\\n      <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      <mat-card-actions>\\n          <button mat-button>\\n            <a target=\\\"_blank\\\" href=\\\"https://goo.gl/mLAiaB\\\" style=\\\"cursor: pointer;text-decoration: none;\\\">ПОДРОБНО</a>\\n          </button>        \\n      </mat-card-actions>\\n    </mat-card>\\n\\n    <mat-card>\\n      <mat-card-subtitle>Используемая технология блокчейн</mat-card-subtitle>\\n      <img mat-card-image src=\\\"https://www.hyperledger.org/wp-content/uploads/2018/01/Hyperledger_Sawtooth_Logo_Color.png\\\">\\n      <mat-card-title>Hyperledger Sawtooth </mat-card-title>\\n      <mat-card-content>\\n        <mat-divider></mat-divider>\\n        <p>Hyperledger Sawtooth предоставляет инструменты для создания собственных реализаций блокчейнов, которые могут применяться\\n          для создания распределённых верифицированных баз данных, состоящих из взаимосвязанных транзакций, заверенных последующими\\n          транзакциями и исключающих изменение информации задним числом. Поступающие данные добавляются в виде обновлений\\n          на основе транзакций, которые применяются к распределённой между несколькими участниками БД. Участник может быть\\n          не связан цепочкой доверия, а достоверность БД координируется алгоритмами достижения консенсуса (для компрометации\\n          базы нужно одновременно получить контроль за состоянием на стороне большего числа участника).</p>\\n        <mat-divider></mat-divider>\\n        <p>Механизм консенсуса: Proof of Elapsed Time</p>\\n        <mat-divider></mat-divider>\\n        <p>Платформа не привязана к конкретной области и может применяться для финансового учёта, ведения кредитной истории,\\n          создания реестров ресурсов, инвентаризации, медицинских картотек и журналов различных бизнес-процессов. В разработке\\n          платформы приняли участие более 50 компаний, включая Amazon Web Services, Huawei, IBM, Intel, Microsoft Azure,\\n          Ericsson, T-Mobile и Wind River. Внедрено несколько экспериментальных прототипов систем учёта на базе Hyperledger\\n          Sawtooth, обеспечивающих фиксацию авторских прав на музыкальные и мультимедийные произведения, ведение медицинских\\n          карт и поддержание системы идентификации клиентов финансовых организаций (KYC).</p>\\n        <mat-divider></mat-divider>\\n        <mat-list>\\n          <mat-list-item>\\n            Особенности Hyperledger Sawtooth:\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n          <mat-list-item>\\n            Применение смарт-контрактов для автоматизации бизнес-процессов и голосования по изменению конфигурации блокчейна (например,\\n            для добавления новых участников и смарт-контрактов)\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            Расширенный движок выполнения транзакций, обеспечивающий параллельную обработку транзакций для ускорения формирования блоков\\n            и их проверки\\n          </mat-list-item>\\n          <mat-list-item>\\n            Поддержка интеграции с инструментарием платформы Ethereum и возможность запуска сторонних смарт-контрактов\\n          </mat-list-item>\\n          <mat-list-item>\\n            Возможность обновления или замены протокола достижения консенсуса по мере роста распределённой сети. Например, можно перейти\\n            на более масштабируемые алгоритмы расчёта консенсуса при их появлении\\n          </mat-list-item>\\n          <mat-list-item>\\n            Возможность разработки смарт-контрактов на различных языках программирования, в том числе на Go, JavaScript и Python\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-card-content>\\n      <mat-card-actions align=\\\"end\\\">\\n        <button mat-button>\\n          <a target=\\\"_blank\\\" href=\\\"https://www.linuxfoundation.org/press-release/hyperledger-releases-hyperledger-sawtooth-1-0/\\\" style=\\\"cursor: pointer;text-decoration: none;\\\">ПОДРОБНО О HYPERLEDGER SAWTOOTH</a>\\n        </button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-form {\\n    box-shadow: 0 0 5px 0px black;\\n    padding: 50px;\\n    margin: 20px;\\n    height: 600px;\\n}\\n\\nmat-form-field,\\nmat-checkbox,\\nmat-list {\\n    width: 400px;\\n}\\n\\n@media (max-width: 750px) {\\n    mat-form-field,\\n    mat-checkbox,\\n    mat-list {\\n        width: 300px;\\n        font-size: .99em;\\n    }\\n    h1 {\\n        font-size: .99em;\\n    }\\n    mat-checkbox {\\n        font-size: .8em;\\n    }\\n}\\n\\n@media (max-width: 450px) {\\n    mat-form-field,\\n    mat-checkbox,\\n    mat-list {\\n        width: 200px;\\n        font-size: .95em;\\n    }\\n    h1 {\\n        font-size: .95em;\\n    }\\n    mat-checkbox {\\n        font-size: .7em;\\n    }\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<section class=\\\"login-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n  <mat-list>\\n    <mat-list-item>\\n      <h1>{{'Вход в систему' | uppercase }}</h1>\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n  <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" #signupForm=\\\"ngForm\\\" (submit)=\\\"onLoginSubmit()\\\">\\n    <mat-form-field hintLabel=\\\"Максимум 20 символов\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Введите Ваш логин\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required maxlength=\\\"20\\\"\\n        #usernameInput=\\\"ngModel\\\">\\n      <mat-icon matSuffix>contacts</mat-icon>\\n      <mat-hint align=\\\"end\\\">{{usernameInput.value?.length || 0}}/20</mat-hint>\\n      <mat-error *ngIf=\\\"usernameInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n      <mat-error *ngIf=\\\"!usernameInput.hasError('required')\\\">Неверный формат логина</mat-error>\\n      <mat-error></mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Минимум 6 символов\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Введите Ваш пароль\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"password\\\"\\n        name=\\\"password\\\" required minlength=\\\"6\\\" #pwInput=\\\"ngModel\\\">\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n      <mat-hint align=\\\"end\\\">{{ pwInput.value?.length}} / 6</mat-hint>\\n      <mat-error>Пароль не может быть меньше 6 символов</mat-error>\\n    </mat-form-field>\\n    <mat-checkbox ngModel name=\\\"remember-me\\\" value=\\\"remember-me\\\" color=\\\"primary\\\">Запомнить меня</mat-checkbox>\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"signupForm.invalid\\\">Войти</button>\\n  </form>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('Вы успешно авторизовались в системе', { cssClass: 'alert-success', timeout: 5000 });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 5000 });\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a {\\n    font-size: 14px;\\n    text-decoration: none;\\n    color: white;\\n  }\\n  \\n  a:hover,\\n  a:active {\\n    color: lightgray;\\n  }\\n  \\n  .navigation-items {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <div fxHide.gt-xs>\\n    <button (click)=\\\"onToggleSidenav()\\\" mat-icon-button>\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n  </div>\\n  <div>\\n    <!-- <a routerLink=\\\"/\\\">КАБИНЕТ АДМИНИСТРАТОРА</a> -->\\n    <li class=\\\"navigation-items\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n      <a [routerLink]=\\\"['/']\\\">\\n        <span>ГЛАВНАЯ</span>\\n      </a>\\n    </li>\\n  </div>\\n  <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n    <ul fxLayout fxLayoutGap=\\\"15px\\\" class=\\\"navigation-items\\\">\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a [routerLink]=\\\"['/dashboard']\\\">ПАНЕЛЬ ЗАДАЧ </a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a [routerLink]=\\\"['/profile']\\\">ПРОФИЛЬ </a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a [routerLink]=\\\"['/login']\\\">ВОЙТИ </a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a [routerLink]=\\\"['/register']\\\">РЕГИСТРАЦИЯ</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\">\\n        <a style=\\\"cursor: pointer\\\" (click)=\\\"onLogoutClick()\\\">ВЫЙТИ</a>\\n      </li>\\n    </ul>\\n  </div>\\n</mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  @Output() sidenavToogle = new EventEmitter<void>();\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('Вы вышли из кабинета. Авторизуйтесь повторно при необходимости', {\n      cssClass: 'alert-success', timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  onToggleSidenav() {\n    this.sidenavToogle.emit();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username : {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email : {{user.email}}</li>\\n  </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n      err => {\n        console.log(err);\n        return false;\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".register-form {\\n    box-shadow: 0 0 5px 0px black;\\n    padding: 50px;\\n    margin: 20px;\\n    height: 600px;\\n}\\n\\nmat-form-field,\\nmat-checkbox,\\nmat-list {\\n    width: 400px;\\n}\\n\\n@media (max-width: 750px) {\\n    mat-form-field,\\n    mat-checkbox,\\n    mat-list {\\n        width: 300px;\\n        font-size: .99em;\\n    }\\n    h1 {\\n        font-size: .99em;\\n    }\\n    mat-checkbox {\\n        font-size: .8em;\\n    }\\n}\\n\\n@media (max-width: 450px) {\\n    mat-form-field,\\n    mat-checkbox,\\n    mat-list {\\n        width: 200px;\\n        font-size: .95em;\\n    }\\n    h1 {\\n        font-size: .95em;\\n    }\\n    mat-checkbox {\\n        font-size: .7em;\\n    }\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<section class=\\\"register-form\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-list>\\n    <mat-list-item>\\n      <h1>{{'Регистрация' | uppercase }}</h1>\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n  <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" #signupForm=\\\"ngForm\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n    <mat-form-field hintLabel=\\\"Максимум 50 символов\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Введите Ваше имя\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required maxlength=\\\"50\\\" #nameInput=\\\"ngModel\\\">\\n      <mat-icon matSuffix>person</mat-icon>\\n      <mat-hint align=\\\"end\\\">{{nameInput.value?.length || 0}}/50</mat-hint>\\n      <mat-error *ngIf=\\\"nameInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n      <mat-error *ngIf=\\\"!nameInput.hasError('required')\\\">Неверно введено имя</mat-error>\\n      <mat-error></mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Максимум 20 символов\\\">\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Введите Ваш логин\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required maxlength=\\\"20\\\"\\n        #usernameInput=\\\"ngModel\\\">\\n      <mat-icon matSuffix>contacts</mat-icon>\\n      <mat-hint align=\\\"end\\\">{{usernameInput.value?.length || 0}}/20</mat-hint>\\n      <mat-error *ngIf=\\\"usernameInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n      <mat-error *ngIf=\\\"!usernameInput.hasError('required')\\\">Неверный формат логина</mat-error>\\n      <mat-error></mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Максимум 50 символов\\\">\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Введите Ваш e-mail\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required maxlength=\\\"50\\\" #emailInput=\\\"ngModel\\\">\\n      <mat-icon matSuffix>email</mat-icon>\\n      <mat-hint align=\\\"end\\\">{{emailInput.value?.length || 0}}/50</mat-hint>\\n      <mat-error *ngIf=\\\"emailInput.hasError('required')\\\">Поле не должно быть пустым</mat-error>\\n      <mat-error *ngIf=\\\"!emailInput.hasError('required')\\\">Неверный формат email</mat-error>\\n      <mat-error></mat-error>\\n    </mat-form-field>\\n    <mat-form-field hintLabel=\\\"Минимум 6 символов\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Введите Ваш пароль\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"password\\\"\\n        name=\\\"password\\\" required minlength=\\\"6\\\" #pwInput=\\\"ngModel\\\">\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n      <mat-hint align=\\\"end\\\">{{ pwInput.value?.length}} / 6</mat-hint>\\n      <mat-error>Пароль не может быть меньше 6 символов</mat-error>\\n    </mat-form-field>\\n    <!-- <mat-form-field>\\n      <mat-select [(ngModel)]=\\\"role\\\" name=\\\"role\\\" required placeholder=\\\"Роль\\\" required>\\n        <mat-option [value]=\\\"option1\\\">superadmin</mat-option>\\n        <mat-option [value]=\\\"option2\\\">admin</mat-option>\\n      </mat-select>\\n      <mat-icon matSuffix>supervisor_account</mat-icon>\\n    </mat-form-field> -->\\n    <mat-checkbox ngModel name=\\\"agree\\\" required color=\\\"primary\\\">Я принимаю условия соглашения</mat-checkbox>\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"signupForm.invalid\\\">Зарегистрироваться</button>\\n  </form>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  role: String;\n  hide = true;\n  emailError = false;\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      role: this.role\n    };\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      // this.flashMessage.show('Пожалуйста заполните все поля', { cssClass: 'alert-danger', timeout: 3000 });\n      this.openSnackBar('Пожалуйста заполните все поля', 'OK');\n      return false;\n    }\n\n    // Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      // this.flashMessage.show('Введите корректный Email', { cssClass: 'alert-danger', timeout: 3000 });\n      this.emailError = true;\n      this.openSnackBar('Введите корректный Email', 'OK');\n      return false;\n    }\n\n    // Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if (data.success) {\n        this.openSnackBar('Вы успешно зарегистрированы и можете войти', 'OK');\n        // this.flashMessage.show('You are now registered and can now login', { cssClass: 'alert-success', timeout: 3000 });\n        this.router.navigate(['/login']);\n      } else {\n        // this.flashMessage.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n        this.openSnackBar('Ошибка при регистрации, повторите', 'OK');\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/guards/auth.guard.ts","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatCheckboxModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatCardModule,\n  MatTabsModule,\n  MatSelectModule,\n  MatDialogModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatMenuModule,\n  MatSnackBarModule,\n  MatProgressBarModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatCardModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatProgressBarModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatCardModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatProgressBarModule\n  ]\n})\nexport class MaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/material.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { HttpModule } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable()\nexport class AuthService {\n  isDev: boolean;\n  authToken: any;\n  user: any;\n  role: any;\n\n  constructor(private http: Http) {\n    this.isDev = true;  // Change to false before deployment\n  }\n\n  registerUser(user) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://127.0.0.1:3002/users/register', user, { headers: headers })\n      .map(res => res.json());\n  }\n\n  authenticateUser(user) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://127.0.0.1:3002/users/authenticate', user, { headers: headers })\n      .map(res => res.json());\n  }\n\n  getProfile() {\n    const headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://127.0.0.1:3002/users/profile', { headers: headers })\n      .map(res => res.json());\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  isAdmin() {\n    this.loadRole();\n    if (this.role === 'superadmin') {\n      return 'superadmin';\n    }\n    if (this.role === 'admin') {\n      return 'admin';\n    }\n  }\n\n  loadRole() {\n    const role = localStorage.getItem('user.role');\n    this.role = role;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return tokenNotExpired('id_token');\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name === undefined || user.email === undefined || user.username === undefined || user.password === undefined ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/app/services/validate.service.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/vasiliy/workdirs/2fa-cabinet-git/client/src/main.ts"],"sourceRoot":"webpack:///"}